// <auto-generated />
using Denga.Pipeworks.SiteSettings.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Denga.Pipeworks.SiteSettings.Migrations
{
    [DbContext(typeof(SiteSettingsContext))]
    partial class SiteSettingsContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Denga.Pipeworks.SiteSettings.SiteSetting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key");

                    b.Property<string>("Value");

                    b.HasKey("Id");

                    b.ToTable("SiteSettings");
                });

            modelBuilder.Entity("Denga.Pipeworks.SiteSettings.SiteSettingsGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("SiteSettingsGroups");
                });

            modelBuilder.Entity("Denga.Pipeworks.SiteSettings.SiteSettingsGroupSiteSetting", b =>
                {
                    b.Property<int>("SettingId");

                    b.Property<int>("SettingsGroupId");

                    b.HasKey("SettingId", "SettingsGroupId");

                    b.HasIndex("SettingsGroupId");

                    b.ToTable("SiteSettingsGroupSiteSettings");
                });

            modelBuilder.Entity("Denga.Pipeworks.SiteSettings.SiteSettingsGroupSiteSetting", b =>
                {
                    b.HasOne("Denga.Pipeworks.SiteSettings.SiteSetting", "Setting")
                        .WithMany("SettingsGroupSettings")
                        .HasForeignKey("SettingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Denga.Pipeworks.SiteSettings.SiteSettingsGroup", "SettingsGroup")
                        .WithMany("SettingsGroupSettings")
                        .HasForeignKey("SettingsGroupId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
